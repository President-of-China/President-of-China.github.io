{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/scratch-vm/src/extension-support/tw-iframe-extension-worker-entry.js","webpack:///./node_modules/microee/index.js","webpack:///./node_modules/minilog/lib/common/filter.js","webpack:///./node_modules/minilog/lib/common/minilog.js","webpack:///./node_modules/minilog/lib/common/transform.js","webpack:///./node_modules/minilog/lib/web/array.js","webpack:///./node_modules/minilog/lib/web/console.js","webpack:///./node_modules/minilog/lib/web/formatters/color.js","webpack:///./node_modules/minilog/lib/web/formatters/minilog.js","webpack:///./node_modules/minilog/lib/web/formatters/util.js","webpack:///./node_modules/minilog/lib/web/index.js","webpack:///./node_modules/minilog/lib/web/jquery_simple.js","webpack:///./node_modules/minilog/lib/web/localstorage.js","webpack:///./node_modules/scratch-vm/src/dispatch/shared-dispatch.js","webpack:///./node_modules/scratch-vm/src/dispatch/worker-dispatch.js","webpack:///./node_modules/scratch-vm/src/extension-support/argument-type.js","webpack:///./node_modules/scratch-vm/src/extension-support/block-type.js","webpack:///./node_modules/scratch-vm/src/extension-support/extension-worker.js","webpack:///./node_modules/scratch-vm/src/extension-support/target-type.js","webpack:///./node_modules/scratch-vm/src/extension-support/tw-extension-worker-context.js","webpack:///./node_modules/scratch-vm/src/extension-support/tw-jquery-shim.js","webpack:///./node_modules/scratch-vm/src/extension-support/tw-scratchx-compatibility-layer.js","webpack:///./node_modules/scratch-vm/src/extension-support/tw-scratchx-utilities.js","webpack:///./node_modules/scratch-vm/src/util/log.js","webpack:///(webpack)/buildin/global.js"],"names":["context","require","jQuery","global","$","id","window","__WRAPPED_IFRAME_ID__","isWorker","centralDispatchService","postMessage","message","transfer","data","vmIframeId","parent","ready","log","SharedDispatch","constructor","callbacks","nextResponseId","call","service","method","args","transferCall","provider","isRemote","_getServiceProvider","_remoteTransferCall","result","apply","Promise","resolve","reject","Error","e","_isRemoteService","_remoteCall","responseId","_storeCallbacks","length","func","pop","_deliverResponse","error","_onMessage","worker","event","promise","_onDispatchMessage","JSON","stringify","then","module","exports","WorkerDispatch","_connectionPromise","_onConnect","services","bind","self","onmessage","waitForConnection","setService","hasOwnProperty","warn","setTimeout","close","ArgumentType","ANGLE","BOOLEAN","COLOR","NUMBER","STRING","MATRIX","NOTE","IMAGE","BlockType","BUTTON","COMMAND","CONDITIONAL","EVENT","HAT","LOOP","REPORTER","dispatch","TargetType","loadScripts","url","importScripts","script","document","createElement","onload","onerror","src","body","appendChild","ExtensionWorker","nextExtensionId","initialRegistrations","firstRegistrationPromise","firstRegistrationCallback","x","extension","workerId","all","extensions","register","extensionObject","extensionId","push","serviceName","Scratch","extensionWorker","ScratchExtensions","SPRITE","STAGE","getScript","callback","objectToQueryString","obj","params","URLSearchParams","key","Object","keys","set","jsonpCallback","ajax","arg1","arg2","options","urlParameters","getFinalURL","query","toString","startsWith","replace","successCallback","success","errorCallback","dataType","callbackName","callbackParameterName","jsonp","res","fetch","headers","json","argumentIndexToId","generateExtensionId","parseScratchXBlockType","type","async","isScratchCompatibleValue","v","parseScratchXArgument","argument","defaultValue","hasDefaultValue","split","menuName","menu","wrapScratchXFunction","originalFunction","argumentCount","argumentList","i","convert","name","descriptor","functions","info","displayName","blocks","color1","color2","color3","scratch3Extension","getInfo","_getStatus","docsURI","blockDescriptor","scratchXBlockType","blockText","functionName","defaultArgumentValues","slice","scratchText","argumentInfo","blockTextParts","part","isArgument","argumentIndex","Math","floor","argumentDefaultValue","argumentId","scratch3BlockType","blockInfo","opcode","blockType","text","arguments","menus","scratch3Menus","menuItems","menuInfo","items","extensionNameToExtension","Map","getStatus","extensionName","get","status","msg","scratchXName","sanitizedName","toLowerCase","minilog","enable"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA,oDAAMA,OAAO,GAAGC,mBAAO,CAAC,qHAAD,CAAvB;;AAEA,MAAMC,MAAM,GAAGD,mBAAO,CAAC,2FAAD,CAAtB;;AACAE,MAAM,CAACC,CAAP,GAAWF,MAAX;AACAC,MAAM,CAACD,MAAP,GAAgBA,MAAhB;AAEA,MAAMG,EAAE,GAAGC,MAAM,CAACC,qBAAlB;AAEAP,OAAO,CAACQ,QAAR,GAAmB,KAAnB;AACAR,OAAO,CAACS,sBAAR,GAAiC;EAC7BC,WAAW,CAAEC,OAAF,EAAWC,QAAX,EAAqB;IAC5B,MAAMC,IAAI,GAAG;MACTC,UAAU,EAAET,EADH;MAETM;IAFS,CAAb;;IAIA,IAAIC,QAAJ,EAAc;MACVN,MAAM,CAACS,MAAP,CAAcL,WAAd,CAA0BG,IAA1B,EAAgC,GAAhC,EAAqCD,QAArC;IACH,CAFD,MAEO;MACHN,MAAM,CAACS,MAAP,CAAcL,WAAd,CAA0BG,IAA1B,EAAgC,GAAhC;IACH;EACJ;;AAX4B,CAAjC;;AAcAZ,mBAAO,CAAC,+FAAD,CAAP;;AAEAK,MAAM,CAACS,MAAP,CAAcL,WAAd,CAA0B;EACtBI,UAAU,EAAET,EADU;EAEtBW,KAAK,EAAE;AAFe,CAA1B,EAGG,GAHH,E;;;;;;;;;;;;ACzBA,cAAc,mBAAmB;AACjC;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,uBAAuB,gBAAgB;AACvC,yCAAyC,gBAAgB;AACzD;AACA,GAAG;AACH;AACA,aAAa,mBAAmB;AAChC,UAAU,6CAA6C;AACvD,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,sCAAsC;AACtC;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjDA;AACA,gBAAgB,mBAAO,CAAC,sEAAgB;;AAExC,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,oBAAoB,8BAA8B;AAClD;AACA;;AAEA;AACA;AACA,oBAAoB,8BAA8B;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACvDA,gBAAgB,mBAAO,CAAC,sEAAgB;AACxC,aAAa,mBAAO,CAAC,gEAAa;;AAElC;AACA;;AAEA;AACA,wBAAwB,mDAAmD,UAAU;AACrF,wBAAwB,iDAAiD,UAAU;AACnF,wBAAwB,iDAAiD,UAAU;AACnF,wBAAwB,iDAAiD,UAAU;AACnF,wBAAwB,iDAAiD,UAAU;AACnF,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA,0CAA0C;AAC1C;;;;;;;;;;;;;AC3CA,cAAc,mBAAO,CAAC,gDAAS;;AAE/B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,8BAA8B;;AAElD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA,uCAAuC;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACvEA,gBAAgB,mBAAO,CAAC,8EAAwB;AAChD;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,yBAAyB,cAAc;AACvC,2BAA2B,YAAY;;AAEvC;;;;;;;;;;;;ACbA,gBAAgB,mBAAO,CAAC,8EAAwB;;AAEhD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,eAAe,mBAAO,CAAC,iFAAuB;AAC9C,iBAAiB,mBAAO,CAAC,qFAAyB;;AAElD;;;;;;;;;;;;AC/BA,gBAAgB,mBAAO,CAAC,iFAA2B;AACnD,YAAY,mBAAO,CAAC,oEAAW;;AAE/B,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;;AAE1B;;;;;;;;;;;;ACjBA,gBAAgB,mBAAO,CAAC,iFAA2B;AACnD,YAAY,mBAAO,CAAC,oEAAW;AAC/B,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,iBAAiB;AAC1B;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,0BAA0B;;AAE1B;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yBAAyB;AACjD,GAAG;AACH,+BAA+B;AAC/B;AACA;;AAEA;;;;;;;;;;;;ACnBA,cAAc,mBAAO,CAAC,0EAAsB;;AAE5C;AACA;AACA;AACA,cAAc,mBAAO,CAAC,+DAAc;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,+DAA+D,EAAE;AACxE;AACA;;AAEA;AACA;AACA,OAAO,4CAA4C,EAAE;AACrD;AACA;;AAEA;;AAEA;AACA,SAAS,mBAAO,CAAC,2DAAY;AAC7B;AACA,gBAAgB,mBAAO,CAAC,yEAAmB;AAC3C,UAAU,mBAAO,CAAC,2EAAoB;AACtC;;;;;;;;;;;;ACzCA,gBAAgB,mBAAO,CAAC,8EAAwB;;AAEhD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,mBAAmB,aAAa;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,uBAAuB;AACrC;AACA;AACA;AACA,OAAO,WAAW;AAClB;AACA;AACA,mCAAmC,aAAa;AAChD;AACA,KAAK;AACL,sDAAsD,WAAW;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,2BAA2B,+BAA+B,EAAE;AAC5D;AACA;;AAEA;;;;;;;;;;;;ACzEA,gBAAgB,mBAAO,CAAC,8EAAwB;AAChD;;AAEA;;AAEA;AACA;AACA;AACA,gBAAgB,sFAAsF;AACtG;AACA;AACA,GAAG;AACH;;AAEA,wB;;;;;;;;;;;ACdA,MAAMC,GAAG,GAAGhB,mBAAO,CAAC,8DAAD,CAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AACA,MAAMiB,cAAN,CAAqB;EACjBC,WAAW,GAAI;IACX;AACR;AACA;AACA;AACA;AACA;IACQ,KAAKC,SAAL,GAAiB,EAAjB;IAEA;AACR;AACA;AACA;;IACQ,KAAKC,cAAL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","file":"scaffolding/extension worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./node_modules/babel-loader/lib/index.js?!./node_modules/scratch-vm/src/extension-support/tw-iframe-extension-worker-entry.js\");\n","const context = require('./tw-extension-worker-context');\n\nconst jQuery = require('./tw-jquery-shim');\nglobal.$ = jQuery;\nglobal.jQuery = jQuery;\n\nconst id = window.__WRAPPED_IFRAME_ID__;\n\ncontext.isWorker = false;\ncontext.centralDispatchService = {\n    postMessage (message, transfer) {\n        const data = {\n            vmIframeId: id,\n            message\n        };\n        if (transfer) {\n            window.parent.postMessage(data, '*', transfer);\n        } else {\n            window.parent.postMessage(data, '*');\n        }\n    }\n};\n\nrequire('./extension-worker');\n\nwindow.parent.postMessage({\n    vmIframeId: id,\n    ready: true\n}, '*');\n","function M() { this._events = {}; }\nM.prototype = {\n  on: function(ev, cb) {\n    this._events || (this._events = {});\n    var e = this._events;\n    (e[ev] || (e[ev] = [])).push(cb);\n    return this;\n  },\n  removeListener: function(ev, cb) {\n    var e = this._events[ev] || [], i;\n    for(i = e.length-1; i >= 0 && e[i]; i--){\n      if(e[i] === cb || e[i].cb === cb) { e.splice(i, 1); }\n    }\n  },\n  removeAllListeners: function(ev) {\n    if(!ev) { this._events = {}; }\n    else { this._events[ev] && (this._events[ev] = []); }\n  },\n  listeners: function(ev) {\n    return (this._events ? this._events[ev] || [] : []);\n  },\n  emit: function(ev) {\n    this._events || (this._events = {});\n    var args = Array.prototype.slice.call(arguments, 1), i, e = this._events[ev] || [];\n    for(i = e.length-1; i >= 0 && e[i]; i--){\n      e[i].apply(this, args);\n    }\n    return this;\n  },\n  when: function(ev, cb) {\n    return this.once(ev, cb, true);\n  },\n  once: function(ev, cb, when) {\n    if(!cb) return this;\n    function c() {\n      if(!when) this.removeListener(ev, c);\n      if(cb.apply(this, arguments) && when) this.removeListener(ev, c);\n    }\n    c.cb = cb;\n    this.on(ev, c);\n    return this;\n  }\n};\nM.mixin = function(dest) {\n  var o = M.prototype, k;\n  for (k in o) {\n    o.hasOwnProperty(k) && (dest.prototype[k] = o[k]);\n  }\n};\nmodule.exports = M;\n","// default filter\nvar Transform = require('./transform.js');\n\nvar levelMap = { debug: 1, info: 2, warn: 3, error: 4 };\n\nfunction Filter() {\n  this.enabled = true;\n  this.defaultResult = true;\n  this.clear();\n}\n\nTransform.mixin(Filter);\n\n// allow all matching, with level >= given level\nFilter.prototype.allow = function(name, level) {\n  this._white.push({ n: name, l: levelMap[level] });\n  return this;\n};\n\n// deny all matching, with level <= given level\nFilter.prototype.deny = function(name, level) {\n  this._black.push({ n: name, l: levelMap[level] });\n  return this;\n};\n\nFilter.prototype.clear = function() {\n  this._white = [];\n  this._black = [];\n  return this;\n};\n\nfunction test(rule, name) {\n  // use .test for RegExps\n  return (rule.n.test ? rule.n.test(name) : rule.n == name);\n};\n\nFilter.prototype.test = function(name, level) {\n  var i, len = Math.max(this._white.length, this._black.length);\n  for(i = 0; i < len; i++) {\n    if(this._white[i] && test(this._white[i], name) && levelMap[level] >= this._white[i].l) {\n      return true;\n    }\n    if(this._black[i] && test(this._black[i], name) && levelMap[level] <= this._black[i].l) {\n      return false;\n    }\n  }\n  return this.defaultResult;\n};\n\nFilter.prototype.write = function(name, level, args) {\n  if(!this.enabled || this.test(name, level)) {\n    return this.emit('item', name, level, args);\n  }\n};\n\nmodule.exports = Filter;\n","var Transform = require('./transform.js'),\n    Filter = require('./filter.js');\n\nvar log = new Transform(),\n    slice = Array.prototype.slice;\n\nexports = module.exports = function create(name) {\n  var o   = function() { log.write(name, undefined, slice.call(arguments)); return o; };\n  o.debug = function() { log.write(name, 'debug', slice.call(arguments)); return o; };\n  o.info  = function() { log.write(name, 'info',  slice.call(arguments)); return o; };\n  o.warn  = function() { log.write(name, 'warn',  slice.call(arguments)); return o; };\n  o.error = function() { log.write(name, 'error', slice.call(arguments)); return o; };\n  o.log   = o.debug; // for interface compliance with Node and browser consoles\n  o.suggest = exports.suggest;\n  o.format = log.format;\n  return o;\n};\n\n// filled in separately\nexports.defaultBackend = exports.defaultFormatter = null;\n\nexports.pipe = function(dest) {\n  return log.pipe(dest);\n};\n\nexports.end = exports.unpipe = exports.disable = function(from) {\n  return log.unpipe(from);\n};\n\nexports.Transform = Transform;\nexports.Filter = Filter;\n// this is the default filter that's applied when .enable() is called normally\n// you can bypass it completely and set up your own pipes\nexports.suggest = new Filter();\n\nexports.enable = function() {\n  if(exports.defaultFormatter) {\n    return log.pipe(exports.suggest) // filter\n              .pipe(exports.defaultFormatter) // formatter\n              .pipe(exports.defaultBackend); // backend\n  }\n  return log.pipe(exports.suggest) // filter\n            .pipe(exports.defaultBackend); // formatter\n};\n\n","var microee = require('microee');\n\n// Implements a subset of Node's stream.Transform - in a cross-platform manner.\nfunction Transform() {}\n\nmicroee.mixin(Transform);\n\n// The write() signature is different from Node's\n// --> makes it much easier to work with objects in logs.\n// One of the lessons from v1 was that it's better to target\n// a good browser rather than the lowest common denominator\n// internally.\n// If you want to use external streams, pipe() to ./stringify.js first.\nTransform.prototype.write = function(name, level, args) {\n  this.emit('item', name, level, args);\n};\n\nTransform.prototype.end = function() {\n  this.emit('end');\n  this.removeAllListeners();\n};\n\nTransform.prototype.pipe = function(dest) {\n  var s = this;\n  // prevent double piping\n  s.emit('unpipe', dest);\n  // tell the dest that it's being piped to\n  dest.emit('pipe', s);\n\n  function onItem() {\n    dest.write.apply(dest, Array.prototype.slice.call(arguments));\n  }\n  function onEnd() { !dest._isStdio && dest.end(); }\n\n  s.on('item', onItem);\n  s.on('end', onEnd);\n\n  s.when('unpipe', function(from) {\n    var match = (from === dest) || typeof from == 'undefined';\n    if(match) {\n      s.removeListener('item', onItem);\n      s.removeListener('end', onEnd);\n      dest.emit('unpipe');\n    }\n    return match;\n  });\n\n  return dest;\n};\n\nTransform.prototype.unpipe = function(from) {\n  this.emit('unpipe', from);\n  return this;\n};\n\nTransform.prototype.format = function(dest) {\n  throw new Error([\n    'Warning: .format() is deprecated in Minilog v2! Use .pipe() instead. For example:',\n    'var Minilog = require(\\'minilog\\');',\n    'Minilog',\n    '  .pipe(Minilog.backends.console.formatClean)',\n    '  .pipe(Minilog.backends.console);'].join('\\n'));\n};\n\nTransform.mixin = function(dest) {\n  var o = Transform.prototype, k;\n  for (k in o) {\n    o.hasOwnProperty(k) && (dest.prototype[k] = o[k]);\n  }\n};\n\nmodule.exports = Transform;\n","var Transform = require('../common/transform.js'),\n    cache = [ ];\n\nvar logger = new Transform();\n\nlogger.write = function(name, level, args) {\n  cache.push([ name, level, args ]);\n};\n\n// utility functions\nlogger.get = function() { return cache; };\nlogger.empty = function() { cache = []; };\n\nmodule.exports = logger;\n","var Transform = require('../common/transform.js');\n\nvar newlines = /\\n+$/,\n    logger = new Transform();\n\nlogger.write = function(name, level, args) {\n  var i = args.length-1;\n  if (typeof console === 'undefined' || !console.log) {\n    return;\n  }\n  if(console.log.apply) {\n    return console.log.apply(console, [name, level].concat(args));\n  } else if(JSON && JSON.stringify) {\n    // console.log.apply is undefined in IE8 and IE9\n    // for IE8/9: make console.log at least a bit less awful\n    if(args[i] && typeof args[i] == 'string') {\n      args[i] = args[i].replace(newlines, '');\n    }\n    try {\n      for(i = 0; i < args.length; i++) {\n        args[i] = JSON.stringify(args[i]);\n      }\n    } catch(e) {}\n    console.log(args.join(' '));\n  }\n};\n\nlogger.formatters = ['color', 'minilog'];\nlogger.color = require('./formatters/color.js');\nlogger.minilog = require('./formatters/minilog.js');\n\nmodule.exports = logger;\n","var Transform = require('../../common/transform.js'),\n    color = require('./util.js');\n\nvar colors = { debug: ['cyan'], info: ['purple' ], warn: [ 'yellow', true ], error: [ 'red', true ] },\n    logger = new Transform();\n\nlogger.write = function(name, level, args) {\n  var fn = console.log;\n  if(console[level] && console[level].apply) {\n    fn = console[level];\n    fn.apply(console, [ '%c'+name+' %c'+level, color('gray'), color.apply(color, colors[level])].concat(args));\n  }\n};\n\n// NOP, because piping the formatted logs can only cause trouble.\nlogger.pipe = function() { };\n\nmodule.exports = logger;\n","var Transform = require('../../common/transform.js'),\n    color = require('./util.js'),\n    colors = { debug: ['gray'], info: ['purple' ], warn: [ 'yellow', true ], error: [ 'red', true ] },\n    logger = new Transform();\n\nlogger.write = function(name, level, args) {\n  var fn = console.log;\n  if(level != 'debug' && console[level]) {\n    fn = console[level];\n  }\n\n  var subset = [], i = 0;\n  if(level != 'info') {\n    for(; i < args.length; i++) {\n      if(typeof args[i] != 'string') break;\n    }\n    fn.apply(console, [ '%c'+name +' '+ args.slice(0, i).join(' '), color.apply(color, colors[level]) ].concat(args.slice(i)));\n  } else {\n    fn.apply(console, [ '%c'+name, color.apply(color, colors[level]) ].concat(args));\n  }\n};\n\n// NOP, because piping the formatted logs can only cause trouble.\nlogger.pipe = function() { };\n\nmodule.exports = logger;\n","var hex = {\n  black: '#000',\n  red: '#c23621',\n  green: '#25bc26',\n  yellow: '#bbbb00',\n  blue:  '#492ee1',\n  magenta: '#d338d3',\n  cyan: '#33bbc8',\n  gray: '#808080',\n  purple: '#708'\n};\nfunction color(fg, isInverse) {\n  if(isInverse) {\n    return 'color: #fff; background: '+hex[fg]+';';\n  } else {\n    return 'color: '+hex[fg]+';';\n  }\n}\n\nmodule.exports = color;\n","var Minilog = require('../common/minilog.js');\n\nvar oldEnable = Minilog.enable,\n    oldDisable = Minilog.disable,\n    isChrome = (typeof navigator != 'undefined' && /chrome/i.test(navigator.userAgent)),\n    console = require('./console.js');\n\n// Use a more capable logging backend if on Chrome\nMinilog.defaultBackend = (isChrome ? console.minilog : console);\n\n// apply enable inputs from localStorage and from the URL\nif(typeof window != 'undefined') {\n  try {\n    Minilog.enable(JSON.parse(window.localStorage['minilogSettings']));\n  } catch(e) {}\n  if(window.location && window.location.search) {\n    var match = RegExp('[?&]minilog=([^&]*)').exec(window.location.search);\n    match && Minilog.enable(decodeURIComponent(match[1]));\n  }\n}\n\n// Make enable also add to localStorage\nMinilog.enable = function() {\n  oldEnable.call(Minilog, true);\n  try { window.localStorage['minilogSettings'] = JSON.stringify(true); } catch(e) {}\n  return this;\n};\n\nMinilog.disable = function() {\n  oldDisable.call(Minilog);\n  try { delete window.localStorage.minilogSettings; } catch(e) {}\n  return this;\n};\n\nexports = module.exports = Minilog;\n\nexports.backends = {\n  array: require('./array.js'),\n  browser: Minilog.defaultBackend,\n  localStorage: require('./localstorage.js'),\n  jQuery: require('./jquery_simple.js')\n};\n","var Transform = require('../common/transform.js');\n\nvar cid = new Date().valueOf().toString(36);\n\nfunction AjaxLogger(options) {\n  this.url = options.url || '';\n  this.cache = [];\n  this.timer = null;\n  this.interval = options.interval || 30*1000;\n  this.enabled = true;\n  this.jQuery = window.jQuery;\n  this.extras = {};\n}\n\nTransform.mixin(AjaxLogger);\n\nAjaxLogger.prototype.write = function(name, level, args) {\n  if(!this.timer) { this.init(); }\n  this.cache.push([name, level].concat(args));\n};\n\nAjaxLogger.prototype.init = function() {\n  if(!this.enabled || !this.jQuery) return;\n  var self = this;\n  this.timer = setTimeout(function() {\n    var i, logs = [], ajaxData, url = self.url;\n    if(self.cache.length == 0) return self.init();\n    // Test each log line and only log the ones that are valid (e.g. don't have circular references).\n    // Slight performance hit but benefit is we log all valid lines.\n    for(i = 0; i < self.cache.length; i++) {\n      try {\n        JSON.stringify(self.cache[i]);\n        logs.push(self.cache[i]);\n      } catch(e) { }\n    }\n    if(self.jQuery.isEmptyObject(self.extras)) {\n        ajaxData = JSON.stringify({ logs: logs });\n        url = self.url + '?client_id=' + cid;\n    } else {\n        ajaxData = JSON.stringify(self.jQuery.extend({logs: logs}, self.extras));\n    }\n\n    self.jQuery.ajax(url, {\n      type: 'POST',\n      cache: false,\n      processData: false,\n      data: ajaxData,\n      contentType: 'application/json',\n      timeout: 10000\n    }).success(function(data, status, jqxhr) {\n      if(data.interval) {\n        self.interval = Math.max(1000, data.interval);\n      }\n    }).error(function() {\n      self.interval = 30000;\n    }).always(function() {\n      self.init();\n    });\n    self.cache = [];\n  }, this.interval);\n};\n\nAjaxLogger.prototype.end = function() {};\n\n// wait until jQuery is defined. Useful if you don't control the load order.\nAjaxLogger.jQueryWait = function(onDone) {\n  if(typeof window !== 'undefined' && (window.jQuery || window.$)) {\n    return onDone(window.jQuery || window.$);\n  } else if (typeof window !== 'undefined') {\n    setTimeout(function() { AjaxLogger.jQueryWait(onDone); }, 200);\n  }\n};\n\nmodule.exports = AjaxLogger;\n","var Transform = require('../common/transform.js'),\n    cache = false;\n\nvar logger = new Transform();\n\nlogger.write = function(name, level, args) {\n  if(typeof window == 'undefined' || typeof JSON == 'undefined' || !JSON.stringify || !JSON.parse) return;\n  try {\n    if(!cache) { cache = (window.localStorage.minilog ? JSON.parse(window.localStorage.minilog) : []); }\n    cache.push([ new Date().toString(), name, level, args ]);\n    window.localStorage.minilog = JSON.stringify(cache);\n  } catch(e) {}\n};\n\nmodule.exports = logger;","const log = require('../util/log');\n\n/**\n * @typedef {object} DispatchCallMessage - a message to the dispatch system representing a service method call\n * @property {*} responseId - send a response message with this response ID. See {@link DispatchResponseMessage}\n * @property {string} service - the name of the service to be called\n * @property {string} method - the name of the method to be called\n * @property {Array|undefined} args - the arguments to be passed to the method\n */\n\n/**\n * @typedef {object} DispatchResponseMessage - a message to the dispatch system representing the results of a call\n * @property {*} responseId - a copy of the response ID from the call which generated this response\n * @property {*|undefined} error - if this is truthy, then it contains results from a failed call (such as an exception)\n * @property {*|undefined} result - if error is not truthy, then this contains the return value of the call (if any)\n */\n\n/**\n * @typedef {DispatchCallMessage|DispatchResponseMessage} DispatchMessage\n * Any message to the dispatch system.\n */\n\n/**\n * The SharedDispatch class is responsible for dispatch features shared by\n * {@link CentralDispatch} and {@link WorkerDispatch}.\n */\nclass SharedDispatch {\n    constructor () {\n        /**\n         * List of callback registrations for promises waiting for a response from a call to a service on another\n         * worker. A callback registration is an array of [resolve,reject] Promise functions.\n         * Calls to local services don't enter this list.\n         * @type {Array.<Function[]>}\n         */\n        this.callbacks = [];\n\n        /**\n         * The next response ID to be used.\n         * @type {int}\n         */\n        this.nextResponseId = 0;\n    }\n\n    /**\n     * Call a particular method on a particular service, regardless of whether that service is provided locally or on\n     * a worker. If the service is provided by a worker, the `args` will be copied using the Structured Clone\n     * algorithm, except for any items which are also in the `transfer` list. Ownership of those items will be\n     * transferred to the worker, and they should not be used after this call.\n     * @example\n     *      dispatcher.call('vm', 'setData', 'cat', 42);\n     *      // this finds the worker for the 'vm' service, then on that worker calls:\n     *      vm.setData('cat', 42);\n     * @param {string} service - the name of the service.\n     * @param {string} method - the name of the method.\n     * @param {*} [args] - the arguments to be copied to the method, if any.\n     * @returns {Promise} - a promise for the return value of the service method.\n     */\n    call (service, method, ...args) {\n        return this.transferCall(service, method, null, ...args);\n    }\n\n    /**\n     * Call a particular method on a particular service, regardless of whether that service is provided locally or on\n     * a worker. If the service is provided by a worker, the `args` will be copied using the Structured Clone\n     * algorithm, except for any items which are also in the `transfer` list. Ownership of those items will be\n     * transferred to the worker, and they should not be used after this call.\n     * @example\n     *      dispatcher.transferCall('vm', 'setData', [myArrayBuffer], 'cat', myArrayBuffer);\n     *      // this finds the worker for the 'vm' service, transfers `myArrayBuffer` to it, then on that worker calls:\n     *      vm.setData('cat', myArrayBuffer);\n     * @param {string} service - the name of the service.\n     * @param {string} method - the name of the method.\n     * @param {Array} [transfer] - objects to be transferred instead of copied. Must be present in `args` to be useful.\n     * @param {*} [args] - the arguments to be copied to the method, if any.\n     * @returns {Promise} - a promise for the return value of the service method.\n     */\n    transferCall (service, method, transfer, ...args) {\n        try {\n            const {provider, isRemote} = this._getServiceProvider(service);\n            if (provider) {\n                if (isRemote) {\n                    return this._remoteTransferCall(provider, service, method, transfer, ...args);\n                }\n\n                const result = provider[method].apply(provider, args);\n                return Promise.resolve(result);\n            }\n            return Promise.reject(new Error(`Service not found: ${service}`));\n        } catch (e) {\n            return Promise.reject(e);\n        }\n    }\n\n    /**\n     * Check if a particular service lives on another worker.\n     * @param {string} service - the service to check.\n     * @returns {boolean} - true if the service is remote (calls must cross a Worker boundary), false otherwise.\n     * @private\n     */\n    _isRemoteService (service) {\n        return this._getServiceProvider(service).isRemote;\n    }\n\n    /**\n     * Like {@link call}, but force the call to be posted through a particular communication channel.\n     * @param {object} provider - send the call through this object's `postMessage` function.\n     * @param {string} service - the name of the service.\n     * @param {string} method - the name of the method.\n     * @param {*} [args] - the arguments to be copied to the method, if any.\n     * @returns {Promise} - a promise for the return value of the service method.\n     */\n    _remoteCall (provider, service, method, ...args) {\n        return this._remoteTransferCall(provider, service, method, null, ...args);\n    }\n\n    /**\n     * Like {@link transferCall}, but force the call to be posted through a particular communication channel.\n     * @param {object} provider - send the call through this object's `postMessage` function.\n     * @param {string} service - the name of the service.\n     * @param {string} method - the name of the method.\n     * @param {Array} [transfer] - objects to be transferred instead of copied. Must be present in `args` to be useful.\n     * @param {*} [args] - the arguments to be copied to the method, if any.\n     * @returns {Promise} - a promise for the return value of the service method.\n     */\n    _remoteTransferCall (provider, service, method, transfer, ...args) {\n        return new Promise((resolve, reject) => {\n            const responseId = this._storeCallbacks(resolve, reject);\n\n            /** @TODO: remove this hack! this is just here so we don't try to send `util` to a worker */\n            // tw: upstream's logic is broken\n            // Args is actually a 3 length list of [args, util, real block info]\n            // We only want to send args. The others will throw errors when they try to be cloned\n            if ((args.length > 0) && (typeof args[args.length - 1].func === 'function')) {\n                args.pop();\n                args.pop();\n            }\n\n            if (transfer) {\n                provider.postMessage({service, method, responseId, args}, transfer);\n            } else {\n                provider.postMessage({service, method, responseId, args});\n            }\n        });\n    }\n\n    /**\n     * Store callback functions pending a response message.\n     * @param {Function} resolve - function to call if the service method returns.\n     * @param {Function} reject - function to call if the service method throws.\n     * @returns {*} - a unique response ID for this set of callbacks. See {@link _deliverResponse}.\n     * @protected\n     */\n    _storeCallbacks (resolve, reject) {\n        const responseId = this.nextResponseId++;\n        this.callbacks[responseId] = [resolve, reject];\n        return responseId;\n    }\n\n    /**\n     * Deliver call response from a worker. This should only be called as the result of a message from a worker.\n     * @param {int} responseId - the response ID of the callback set to call.\n     * @param {DispatchResponseMessage} message - the message containing the response value(s).\n     * @protected\n     */\n    _deliverResponse (responseId, message) {\n        try {\n            const [resolve, reject] = this.callbacks[responseId];\n            delete this.callbacks[responseId];\n            if (message.error) {\n                reject(message.error);\n            } else {\n                resolve(message.result);\n            }\n        } catch (e) {\n            log.error(`Dispatch callback failed: ${e}`);\n        }\n    }\n\n    /**\n     * Handle a message event received from a connected worker.\n     * @param {Worker} worker - the worker which sent the message, or the global object if running in a worker.\n     * @param {MessageEvent} event - the message event to be handled.\n     * @protected\n     */\n    _onMessage (worker, event) {\n        /** @type {DispatchMessage} */\n        const message = event.data;\n        message.args = message.args || [];\n        let promise;\n        if (message.service) {\n            if (message.service === 'dispatch') {\n                promise = this._onDispatchMessage(worker, message);\n            } else {\n                promise = this.call(message.service, message.method, ...message.args);\n            }\n        } else if (typeof message.responseId === 'undefined') {\n            log.error(`Dispatch caught malformed message from a worker: ${JSON.stringify(event)}`);\n        } else {\n            this._deliverResponse(message.responseId, message);\n        }\n        if (promise) {\n            if (typeof message.responseId === 'undefined') {\n                log.error(`Dispatch message missing required response ID: ${JSON.stringify(event)}`);\n            } else {\n                promise.then(\n                    result => worker.postMessage({responseId: message.responseId, result}),\n                    error => worker.postMessage({responseId: message.responseId, error: `${error}`})\n                );\n            }\n        }\n    }\n\n    /**\n     * Fetch the service provider object for a particular service name.\n     * @abstract\n     * @param {string} service - the name of the service to look up\n     * @returns {{provider:(object|Worker), isRemote:boolean}} - the means to contact the service, if found\n     * @protected\n     */\n    _getServiceProvider (service) {\n        throw new Error(`Could not get provider for ${service}: _getServiceProvider not implemented`);\n    }\n\n    /**\n     * Handle a call message sent to the dispatch service itself\n     * @abstract\n     * @param {Worker} worker - the worker which sent the message.\n     * @param {DispatchCallMessage} message - the message to be handled.\n     * @returns {Promise|undefined} - a promise for the results of this operation, if appropriate\n     * @private\n     */\n    _onDispatchMessage (worker, message) {\n        throw new Error(`Unimplemented dispatch message handler cannot handle ${message.method} method`);\n    }\n}\n\nmodule.exports = SharedDispatch;\n","const SharedDispatch = require('./shared-dispatch');\n\nconst log = require('../util/log');\nconst {centralDispatchService} = require('../extension-support/tw-extension-worker-context');\n\n/**\n * This class provides a Worker with the means to participate in the message dispatch system managed by CentralDispatch.\n * From any context in the messaging system, the dispatcher's \"call\" method can call any method on any \"service\"\n * provided in any participating context. The dispatch system will forward function arguments and return values across\n * worker boundaries as needed.\n * @see {CentralDispatch}\n */\nclass WorkerDispatch extends SharedDispatch {\n    constructor () {\n        super();\n\n        /**\n         * This promise will be resolved when we have successfully connected to central dispatch.\n         * @type {Promise}\n         * @see {waitForConnection}\n         * @private\n         */\n        this._connectionPromise = new Promise(resolve => {\n            this._onConnect = resolve;\n        });\n\n        /**\n         * Map of service name to local service provider.\n         * If a service is not listed here, it is assumed to be provided by another context (another Worker or the main\n         * thread).\n         * @see {setService}\n         * @type {object}\n         */\n        this.services = {};\n\n        this._onMessage = this._onMessage.bind(this, centralDispatchService);\n        if (typeof self !== 'undefined') {\n            self.onmessage = this._onMessage;\n        }\n    }\n\n    /**\n     * @returns {Promise} a promise which will resolve upon connection to central dispatch. If you need to make a call\n     * immediately on \"startup\" you can attach a 'then' to this promise.\n     * @example\n     *      dispatch.waitForConnection.then(() => {\n     *          dispatch.call('myService', 'hello');\n     *      })\n     */\n    get waitForConnection () {\n        return this._connectionPromise;\n    }\n\n    /**\n     * Set a local object as the global provider of the specified service.\n     * WARNING: Any method on the provider can be called from any worker within the dispatch system.\n     * @param {string} service - a globally unique string identifying this service. Examples: 'vm', 'gui', 'extension9'.\n     * @param {object} provider - a local object which provides this service.\n     * @returns {Promise} - a promise which will resolve once the service is registered.\n     */\n    setService (service, provider) {\n        if (this.services.hasOwnProperty(service)) {\n            log.warn(`Worker dispatch replacing existing service provider for ${service}`);\n        }\n        this.services[service] = provider;\n        return this.waitForConnection.then(() => this._remoteCall(centralDispatchService, 'dispatch', 'setService', service));\n    }\n\n    /**\n     * Fetch the service provider object for a particular service name.\n     * @override\n     * @param {string} service - the name of the service to look up\n     * @returns {{provider:(object|Worker), isRemote:boolean}} - the means to contact the service, if found\n     * @protected\n     */\n    _getServiceProvider (service) {\n        // if we don't have a local service by this name, contact central dispatch by calling `postMessage` on self\n        const provider = this.services[service];\n        return {\n            provider: provider || centralDispatchService,\n            isRemote: !provider\n        };\n    }\n\n    /**\n     * Handle a call message sent to the dispatch service itself\n     * @override\n     * @param {Worker} worker - the worker which sent the message.\n     * @param {DispatchCallMessage} message - the message to be handled.\n     * @returns {Promise|undefined} - a promise for the results of this operation, if appropriate\n     * @protected\n     */\n    _onDispatchMessage (worker, message) {\n        let promise;\n        switch (message.method) {\n        case 'handshake':\n            promise = this._onConnect();\n            break;\n        case 'terminate':\n            // Don't close until next tick, after sending confirmation back\n            setTimeout(() => self.close(), 0);\n            promise = Promise.resolve();\n            break;\n        default:\n            log.error(`Worker dispatch received message for unknown method: ${message.method}`);\n        }\n        return promise;\n    }\n}\n\nmodule.exports = new WorkerDispatch();\n","/**\n * Block argument types\n * @enum {string}\n */\nconst ArgumentType = {\n    /**\n     * Numeric value with angle picker\n     */\n    ANGLE: 'angle',\n\n    /**\n     * Boolean value with hexagonal placeholder\n     */\n    BOOLEAN: 'Boolean',\n\n    /**\n     * Numeric value with color picker\n     */\n    COLOR: 'color',\n\n    /**\n     * Numeric value with text field\n     */\n    NUMBER: 'number',\n\n    /**\n     * String value with text field\n     */\n    STRING: 'string',\n\n    /**\n     * String value with matrix field\n     */\n    MATRIX: 'matrix',\n\n    /**\n     * MIDI note number with note picker (piano) field\n     */\n    NOTE: 'note',\n\n    /**\n     * Inline image on block (as part of the label)\n     */\n    IMAGE: 'image'\n};\n\nmodule.exports = ArgumentType;\n","/**\n * Types of block\n * @enum {string}\n */\nconst BlockType = {\n    /**\n     * Boolean reporter with hexagonal shape\n     */\n    BOOLEAN: 'Boolean',\n\n    /**\n     * A button (not an actual block) for some special action, like making a variable\n     */\n    BUTTON: 'button',\n\n    /**\n     * Command block\n     */\n    COMMAND: 'command',\n\n    /**\n     * Specialized command block which may or may not run a child branch\n     * The thread continues with the next block whether or not a child branch ran.\n     */\n    CONDITIONAL: 'conditional',\n\n    /**\n     * Specialized hat block with no implementation function\n     * This stack only runs if the corresponding event is emitted by other code.\n     */\n    EVENT: 'event',\n\n    /**\n     * Hat block which conditionally starts a block stack\n     */\n    HAT: 'hat',\n\n    /**\n     * Specialized command block which may or may not run a child branch\n     * If a child branch runs, the thread evaluates the loop block again.\n     */\n    LOOP: 'loop',\n\n    /**\n     * General reporter with numeric or string value\n     */\n    REPORTER: 'reporter'\n};\n\nmodule.exports = BlockType;\n","/* eslint-env worker */\n\nconst ArgumentType = require('../extension-support/argument-type');\nconst BlockType = require('../extension-support/block-type');\nconst dispatch = require('../dispatch/worker-dispatch');\nconst log = require('../util/log');\nconst TargetType = require('../extension-support/target-type');\nconst {isWorker} = require('./tw-extension-worker-context');\n\nconst loadScripts = url => {\n    if (isWorker) {\n        importScripts(url);\n    } else {\n        return new Promise((resolve, reject) => {\n            const script = document.createElement('script');\n            script.onload = () => resolve();\n            script.onerror = () => reject(new Error(`Error when loading custom extension script: ${url}`));\n            script.src = url;\n            document.body.appendChild(script);\n        });\n    }\n};\n\nclass ExtensionWorker {\n    constructor () {\n        this.nextExtensionId = 0;\n\n        this.initialRegistrations = [];\n\n        this.firstRegistrationPromise = new Promise(resolve => {\n            this.firstRegistrationCallback = resolve;\n        });\n\n        dispatch.waitForConnection.then(() => {\n            dispatch.call('extensions', 'allocateWorker').then(async x => {\n                const [id, extension] = x;\n                this.workerId = id;\n\n                try {\n                    await loadScripts(extension);\n                    await this.firstRegistrationPromise;\n\n                    const initialRegistrations = this.initialRegistrations;\n                    this.initialRegistrations = null;\n\n                    Promise.all(initialRegistrations).then(() => dispatch.call('extensions', 'onWorkerInit', id));\n                } catch (e) {\n                    log.error(e);\n                    dispatch.call('extensions', 'onWorkerInit', id, `${e}`);\n                }\n            });\n        });\n\n        this.extensions = [];\n    }\n\n    register (extensionObject) {\n        const extensionId = this.nextExtensionId++;\n        this.extensions.push(extensionObject);\n        const serviceName = `extension.${this.workerId}.${extensionId}`;\n        const promise = dispatch.setService(serviceName, extensionObject)\n            .then(() => dispatch.call('extensions', 'registerExtensionService', serviceName));\n        if (this.initialRegistrations) {\n            this.firstRegistrationCallback();\n            this.initialRegistrations.push(promise);\n        }\n        return promise;\n    }\n}\n\nglobal.Scratch = global.Scratch || {};\nglobal.Scratch.ArgumentType = ArgumentType;\nglobal.Scratch.BlockType = BlockType;\nglobal.Scratch.TargetType = TargetType;\n\n/**\n * Expose only specific parts of the worker to extensions.\n */\nconst extensionWorker = new ExtensionWorker();\nglobal.Scratch.extensions = {\n    register: extensionWorker.register.bind(extensionWorker)\n};\n\nglobal.ScratchExtensions = require('./tw-scratchx-compatibility-layer');\n","/**\n * Default types of Target supported by the VM\n * @enum {string}\n */\nconst TargetType = {\n    /**\n     * Rendered target which can move, change costumes, etc.\n     */\n    SPRITE: 'sprite',\n\n    /**\n     * Rendered target which cannot move but can change backdrops\n     */\n    STAGE: 'stage'\n};\n\nmodule.exports = TargetType;\n","module.exports = {\n    isWorker: true,\n    // centralDispatchService is the object to call postMessage() on to send a message to parent.\n    centralDispatchService: self\n};\n","/**\n * @fileoverview\n * Many ScratchX extensions require jQuery to do things like loading scripts and making requests.\n * The real jQuery is pretty large and we'd rather not bring in everything, so this file reimplements\n * small stubs of a few jQuery methods.\n * It's just supposed to be enough to make existing ScratchX extensions work, nothing more.\n */\n\nconst log = require('../util/log');\n\nconst jQuery = () => {\n    throw new Error('Not implemented');\n};\n\njQuery.getScript = (src, callback) => {\n    const script = document.createElement('script');\n    script.src = src;\n    if (callback) {\n        // We don't implement callback arguments.\n        script.onload = () => callback();\n    }\n    document.body.appendChild(script);\n};\n\n/**\n * @param {Record<string, any>|undefined} obj\n * @returns {URLSearchParams}\n */\nconst objectToQueryString = obj => {\n    const params = new URLSearchParams();\n    if (obj) {\n        for (const key of Object.keys(obj)) {\n            params.set(key, obj[key]);\n        }\n    }\n    return params;\n};\n\nlet jsonpCallback = 0;\n\njQuery.ajax = async (arg1, arg2) => {\n    let options = {};\n\n    if (arg1 && arg2) {\n        options = arg2;\n        options.url = arg1;\n    } else if (arg1) {\n        options = arg1;\n    }\n\n    const urlParameters = objectToQueryString(options.data);\n    const getFinalURL = () => {\n        const query = urlParameters.toString();\n        let url = options.url;\n        if (query) {\n            url += `?${query}`;\n        }\n        // Forcibly upgrade all HTTP requests to HTTPS so that they don't error on HTTPS sites\n        // All the extensions we care about work fine with this\n        if (url.startsWith('http://')) {\n            url = url.replace('http://', 'https://');\n        }\n        return url;\n    };\n\n    const successCallback = result => {\n        if (options.success) {\n            options.success(result);\n        }\n    };\n    const errorCallback = error => {\n        log.error(error);\n        if (options.error) {\n            // The error object we provide here might not match what jQuery provides but it's enough to\n            // prevent extensions from throwing errors trying to access properties.\n            options.error(error);\n        }\n    };\n\n    try {\n        if (options.dataType === 'jsonp') {\n            const callbackName = `_jsonp_callback${jsonpCallback++}`;\n            global[callbackName] = data => {\n                delete global[callbackName];\n                successCallback(data);\n            };\n\n            const callbackParameterName = options.jsonp || 'callback';\n            urlParameters.set(callbackParameterName, callbackName);\n\n            jQuery.getScript(getFinalURL());\n            return;\n        }\n\n        if (options.dataType === 'script') {\n            jQuery.getScript(getFinalURL(), successCallback);\n            return;\n        }\n\n        const res = await fetch(getFinalURL(), {\n            headers: options.headers\n        });\n        // dataType defaults to \"Intelligent Guess (xml, json, script, or html)\"\n        // It happens that all the ScratchX extensions we care about either set dataType to \"json\" or\n        // leave it blank and implicitly request JSON, so this works good enough for now.\n        successCallback(await res.json());\n    } catch (e) {\n        errorCallback(e);\n    }\n};\n\nmodule.exports = jQuery;\n","// ScratchX API Documentation: https://github.com/LLK/scratchx/wiki/\n\n// Global Scratch API from extension-worker.js\n/* globals Scratch */\n\nconst ArgumentType = require('./argument-type');\nconst BlockType = require('./block-type');\n\nconst {\n    argumentIndexToId,\n    generateExtensionId\n} = require('./tw-scratchx-utilities');\n\n/**\n * @typedef ScratchXDescriptor\n * @property {unknown[][]} blocks\n * @property {Record<string, unknown[]>} [menus]\n * @property {string} [url]\n * @property {string} [displayName]\n */\n\n/**\n * @typedef ScratchXStatus\n * @property {0|1|2} status 0 is red/error, 1 is yellow/not ready, 2 is green/ready\n * @property {string} msg\n */\n\nconst parseScratchXBlockType = type => {\n    if (type === '' || type === ' ' || type === 'w') {\n        return {\n            type: BlockType.COMMAND,\n            async: type === 'w'\n        };\n    }\n    if (type === 'r' || type === 'R') {\n        return {\n            type: BlockType.REPORTER,\n            async: type === 'R'\n        };\n    }\n    if (type === 'b') {\n        return {\n            type: BlockType.BOOLEAN,\n            // ScratchX docs don't seem to mention boolean reporters that wait\n            async: false\n        };\n    }\n    if (type === 'h') {\n        return {\n            type: BlockType.HAT,\n            async: false\n        };\n    }\n    throw new Error(`Unknown ScratchX block type: ${type}`);\n};\n\nconst isScratchCompatibleValue = v => typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean';\n\n/**\n * @param {string} argument ScratchX argument with leading % removed.\n * @param {unknown} defaultValue Default value, if any\n */\nconst parseScratchXArgument = (argument, defaultValue) => {\n    const result = {};\n    const hasDefaultValue = isScratchCompatibleValue(defaultValue);\n    if (hasDefaultValue) {\n        result.defaultValue = defaultValue;\n    }\n    // TODO: ScratchX docs don't mention support for boolean arguments?\n    if (argument === 's') {\n        result.type = ArgumentType.STRING;\n        if (!hasDefaultValue) {\n            result.defaultValue = '';\n        }\n    } else if (argument === 'n') {\n        result.type = ArgumentType.NUMBER;\n        if (!hasDefaultValue) {\n            result.defaultValue = 0;\n        }\n    } else if (argument[0] === 'm') {\n        result.type = ArgumentType.STRING;\n        const split = argument.split(/\\.|:/);\n        const menuName = split[1];\n        result.menu = menuName;\n    } else {\n        throw new Error(`Unknown ScratchX argument type: ${argument}`);\n    }\n    return result;\n};\n\nconst wrapScratchXFunction = (originalFunction, argumentCount, async) => args => {\n    // Convert Scratch 3's argument object to an argument list expected by ScratchX\n    const argumentList = [];\n    for (let i = 0; i < argumentCount; i++) {\n        argumentList.push(args[argumentIndexToId(i)]);\n    }\n    if (async) {\n        return new Promise(resolve => {\n            originalFunction(...argumentList, resolve);\n        });\n    }\n    return originalFunction(...argumentList);\n};\n\n/**\n * @param {string} name\n * @param {ScratchXDescriptor} descriptor\n * @param {Record<string, () => unknown>} functions\n */\nconst convert = (name, descriptor, functions) => {\n    const extensionId = generateExtensionId(name);\n    const info = {\n        id: extensionId,\n        name: descriptor.displayName || name,\n        blocks: [],\n        color1: '#4a4a5e',\n        color2: '#31323f',\n        color3: '#191a21'\n    };\n    const scratch3Extension = {\n        getInfo: () => info,\n        _getStatus: functions._getStatus\n    };\n\n    if (descriptor.url) {\n        info.docsURI = descriptor.url;\n    }\n\n    for (const blockDescriptor of descriptor.blocks) {\n        if (blockDescriptor.length === 1) {\n            // Separator\n            info.blocks.push('---');\n            continue;\n        }\n        const scratchXBlockType = blockDescriptor[0];\n        const blockText = blockDescriptor[1];\n        const functionName = blockDescriptor[2];\n        const defaultArgumentValues = blockDescriptor.slice(3);\n\n        let scratchText = '';\n        const argumentInfo = [];\n        const blockTextParts = blockText.split(/%([\\w.:]+)/g);\n        for (let i = 0; i < blockTextParts.length; i++) {\n            const part = blockTextParts[i];\n            const isArgument = i % 2 === 1;\n            if (isArgument) {\n                parseScratchXArgument(part);\n                const argumentIndex = Math.floor(i / 2).toString();\n                const argumentDefaultValue = defaultArgumentValues[argumentIndex];\n                const argumentId = argumentIndexToId(argumentIndex);\n                argumentInfo[argumentId] = parseScratchXArgument(part, argumentDefaultValue);\n                scratchText += `[${argumentId}]`;\n            } else {\n                scratchText += part;\n            }\n        }\n\n        const scratch3BlockType = parseScratchXBlockType(scratchXBlockType);\n        const blockInfo = {\n            opcode: functionName,\n            blockType: scratch3BlockType.type,\n            text: scratchText,\n            arguments: argumentInfo\n        };\n        info.blocks.push(blockInfo);\n\n        const originalFunction = functions[functionName];\n        const argumentCount = argumentInfo.length;\n        scratch3Extension[functionName] = wrapScratchXFunction(\n            originalFunction,\n            argumentCount,\n            scratch3BlockType.async\n        );\n    }\n\n    const menus = descriptor.menus;\n    if (menus) {\n        const scratch3Menus = {};\n        for (const menuName of Object.keys(menus) || {}) {\n            const menuItems = menus[menuName];\n            const menuInfo = {\n                items: menuItems\n            };\n            scratch3Menus[menuName] = menuInfo;\n        }\n        info.menus = scratch3Menus;\n    }\n\n    return scratch3Extension;\n};\n\nconst extensionNameToExtension = new Map();\n\nconst register = (name, descriptor, functions) => {\n    const scratch3Extension = convert(name, descriptor, functions);\n    extensionNameToExtension.set(name, scratch3Extension);\n    Scratch.extensions.register(scratch3Extension);\n};\n\n/**\n * @param {string} extensionName\n * @returns {ScratchXStatus}\n */\nconst getStatus = extensionName => {\n    const extension = extensionNameToExtension.get(extensionName);\n    if (extension) {\n        return extension._getStatus();\n    }\n    return {\n        status: 0,\n        msg: 'does not exist'\n    };\n};\n\nmodule.exports = {\n    register,\n    getStatus,\n\n    // For tests\n    convert\n};\n","/**\n * @fileoverview\n * General ScratchX-related utilities used in multiple places.\n * Changing these functions may break projects.\n */\n\n/**\n * @param {string} scratchXName\n * @returns {string}\n */\nconst generateExtensionId = scratchXName => {\n    const sanitizedName = scratchXName.replace(/[^a-z0-9]/gi, '').toLowerCase();\n    return `sbx${sanitizedName}`;\n};\n\n/**\n * @param {number} i 0-indexed index of argument in list\n * @returns {string} Scratch 3 argument name\n */\nconst argumentIndexToId = i => i.toString();\n\nmodule.exports = {\n    generateExtensionId,\n    argumentIndexToId\n};\n","const minilog = require('minilog');\nminilog.enable();\n\nmodule.exports = minilog('vm');\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}